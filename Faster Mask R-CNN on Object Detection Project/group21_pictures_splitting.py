# -*- coding: utf-8 -*-
"""Group21_pictures_splitting.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13FNPX5lVaBPx9tYa2RYElLxl1V1gjaCS

Split pictures using image_split for Mask R-CNN
Code adapted from test_imgsplit.ipynb

Group21
Mingyong Liu, Emmanuel Obi, Pat Ganesan and Dipak Dulal
"""

#Install packages that are needed
!apt install libspatialindex-dev
!pip install rtree
!pip3 install scikit-image

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

# %matplotlib inline

"""## **Identify pictures that were not correctly annotated**"""

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My Drive/machine_learning_project/

import json

# Extract the x and y coordinates of each region
annotations = json.load(open('unsplit_pictures/HQ_Data/HQ_annotations.json'))
annotations = list(annotations.values())  # don't need the dict keys

# Extract the information from JSON file according to the data subset
#annotations = [a for a in annotations if (a['filename'] in image_ids)]
   
picture_with_problem = []
# Add images
for a in annotations:
    # Get the x, y coordinaets of points of the polygons that make up
    # the outline of each object instance.
    names = [r['shape_attributes']['name'] for r in a['regions']]
    accepted_classes = ["Head","Thread","Nut","Washer","Pin"]
    classes = []
    for r in a['regions']:
      #extract the pictures that are not labelled with polygon
      if r['shape_attributes']['name'] != 'polygon':
        picture_with_problem.append(a['filename'])
        break
      #extract the pictures whose annotation is off
      elif ('class' in list(r['region_attributes'].keys())) == False:
        picture_with_problem.append(a['filename'])
        break
      else:
        classes.append(r['region_attributes']['class'])

    if (sum([(c in accepted_classes) for c in classes])!= len(classes)):
        picture_with_problem.append(a['filename'])

  
print(len(picture_with_problem))

"""## **Split Pictures**"""

from imgsplit_editedML import AnnotatedImages

an = AnnotatedImages(r"unsplit_pictures/HQ_Data/HQ_Images",
                     r"unsplit_pictures/HQ_Data/HQ_annotations.json")
an.generate((1000, 1000), 200, r"split_pictures", r"split_pictures/new_HQ_annotations.json")

! ls -l 'split_pictures'